server:
  port: 8081

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/microservices
    username: root
    password: RadheK143@
    driver-class-name: com.mysql.cj.jdbc.Driver
  config:
    import:
      - configserver:http://localhost:8086

#Spring security configurations
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-36615249.okta.com/oauth2/default
      client:
        registration:
          my-internal-client:
            provider: okta
            authorizationGrantType: client-credentials
            scope:
              - internal
            client-id: 0oaedr0l30gedGVFr5d7
            client-secret: LyysPNQuc5wQKgq9guyYukxggQhrLeyO0GojbGpaqrpg99L0gjhcaDkdbTdPSO_U

        provider:
          okta:
            issuerUri: https://dev-36615249.okta.com/oauth2/default


  application:
    name: USER-SERVICE







  jpa:
    hibernate:
      ddl-auto: update
      show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

#eureka:
#  client:
#    service-url:
#      defaultZone: http://localhost:8084/eureka  # Replace with your Eureka server's host and port
#  instance:
#    prefer-ip-address: true  # Register with the IP address of the instance
#

# Actuator Configurations
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include:
          - health
  endpoint:
    health:
      show-details: always



#Resilience4J Configurations

resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED

  retry:
    instances:
      ratingHotelService:
        maxAttempts: 3
        waitDuration: 5s

  ratelimiter:
      instances:
        userRateLimiter: # You can replace 'yourRateLimiterName' with a meaningful name for your Rate Limiter instance
          limit-refresh-period: 4s
          limit-for-period: 2
          timeout-duration: 0s

# Okta Configurations
okta:
  oauth2:
    issuer: https://dev-36615249.okta.com/oauth2/default
    audience: api://default






